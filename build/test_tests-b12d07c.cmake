add_test( [==[Random Test Case 3]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Random Test Case 3]==]  )
set_tests_properties( [==[Random Test Case 3]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[BFS Test Case 1]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[BFS Test Case 1]==]  )
set_tests_properties( [==[BFS Test Case 1]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[BFS Test Case 2]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[BFS Test Case 2]==]  )
set_tests_properties( [==[BFS Test Case 2]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[BFS Test Case 3]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[BFS Test Case 3]==]  )
set_tests_properties( [==[BFS Test Case 3]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[BFS Test Case 4]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[BFS Test Case 4]==]  )
set_tests_properties( [==[BFS Test Case 4]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[BFS Test Case 5]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[BFS Test Case 5]==]  )
set_tests_properties( [==[BFS Test Case 5]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Dijkstra can find the airport shortest distance]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Dijkstra can find the airport shortest distance]==]  )
set_tests_properties( [==[Dijkstra can find the airport shortest distance]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Dijkstra can find the airport shortest distance (path does not exist)]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Dijkstra can find the airport shortest distance (path does not exist)]==]  )
set_tests_properties( [==[Dijkstra can find the airport shortest distance (path does not exist)]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Dijkstra can find the airport shortest distance (direct path)]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Dijkstra can find the airport shortest distance (direct path)]==]  )
set_tests_properties( [==[Dijkstra can find the airport shortest distance (direct path)]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Dijkstra can find the airport shortest distance (not direct path but one exists)]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Dijkstra can find the airport shortest distance (not direct path but one exists)]==]  )
set_tests_properties( [==[Dijkstra can find the airport shortest distance (not direct path but one exists)]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Dijkstra can find the airport shortest distance (no path exists)]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Dijkstra can find the airport shortest distance (no path exists)]==]  )
set_tests_properties( [==[Dijkstra can find the airport shortest distance (no path exists)]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[data for airport 1 correctly stored in graph]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[data for airport 1 correctly stored in graph]==]  )
set_tests_properties( [==[data for airport 1 correctly stored in graph]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[index containing \N skipped when storing airport 7]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[index containing \N skipped when storing airport 7]==]  )
set_tests_properties( [==[index containing \N skipped when storing airport 7]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[graph with size>1 constructed]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[graph with size>1 constructed]==]  )
set_tests_properties( [==[graph with size>1 constructed]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Parsing First Element]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Parsing First Element]==]  )
set_tests_properties( [==[Parsing First Element]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Parsing Last Element]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Parsing Last Element]==]  )
set_tests_properties( [==[Parsing Last Element]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Parsing Random]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Parsing Random]==]  )
set_tests_properties( [==[Parsing Random]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Parsing Random]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Parsing Random]==]  )
set_tests_properties( [==[Parsing Random]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[Skips /N values]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[Skips /N values]==]  )
set_tests_properties( [==[Skips /N values]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
add_test( [==[No extra values in any vector/ all the data has been parsed]==] /workspaces/CS225/NotSkyScanner-main/build/test [==[No extra values in any vector/ all the data has been parsed]==]  )
set_tests_properties( [==[No extra values in any vector/ all the data has been parsed]==] PROPERTIES WORKING_DIRECTORY /workspaces/CS225/NotSkyScanner-main/build)
set( test_TESTS [==[Random Test Case 3]==] [==[BFS Test Case 1]==] [==[BFS Test Case 2]==] [==[BFS Test Case 3]==] [==[BFS Test Case 4]==] [==[BFS Test Case 5]==] [==[Dijkstra can find the airport shortest distance]==] [==[Dijkstra can find the airport shortest distance (path does not exist)]==] [==[Dijkstra can find the airport shortest distance (direct path)]==] [==[Dijkstra can find the airport shortest distance (not direct path but one exists)]==] [==[Dijkstra can find the airport shortest distance (no path exists)]==] [==[data for airport 1 correctly stored in graph]==] [==[index containing \N skipped when storing airport 7]==] [==[graph with size>1 constructed]==] [==[Parsing First Element]==] [==[Parsing Last Element]==] [==[Parsing Random]==] [==[Parsing Random]==] [==[Skips /N values]==] [==[No extra values in any vector/ all the data has been parsed]==])
